<?xml version="1.0"?>
<!--
  For more information on how to configure your ASP.NET application, please visit
  http://go.microsoft.com/fwlink/?LinkId=169433
  -->
<configuration>
  <configSections>
    <section name="entityFramework" type="System.Data.Entity.Internal.ConfigFile.EntityFrameworkSection, EntityFramework, Version=6.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false"/>
    <!-- For more information on Entity Framework configuration, visit http://go.microsoft.com/fwlink/?LinkID=237468 -->
  </configSections>
  <!--mbr diagnostics -->
  <!--
  <system.diagnostics>
    <trace autoflush="true" />
    <sources>
      <source name="MembershipReboot" switchValue="Verbose">
        <listeners>
          <add name="MembershipRebootListener" />
        </listeners>
      </source>
    </sources>
    <sharedListeners>
      <add name="MembershipRebootListener" type="System.Diagnostics.XmlWriterTraceListener, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" initializeData="C:\logsMembershipReboot.svclog" traceOutputOptions="Timestamp">
        <filter type="" />
      </add>
    </sharedListeners>
  </system.diagnostics>-->
  <!--<system.diagnostics>
    <trace autoflush="true" indentsize="4">
      <listeners>
        <add name="myListener" type="System.Diagnostics.TextWriterTraceListener" initializeData="Trace.log" />
        <remove name="Default" />
      </listeners>
    </trace>
  </system.diagnostics>-->
  <!--
    For a description of web.config changes see http://go.microsoft.com/fwlink/?LinkId=235367.

    The following attributes can be set on the <httpRuntime> tag.
      <system.Web>
        <httpRuntime targetFramework="4.8" />
      </system.Web>
  -->
  <system.web>
    <compilation debug="true" targetFramework="4.8"/>
    <httpRuntime targetFramework="4.5.2"/>
  </system.web>
  <!--Needed so the IdentityServer can pull all of its embedded resources-->
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
  </system.webServer>
  <system.data>
    <DbProviderFactories>
      <add name="Npgsql Data Provider" invariant="Npgsql" description="Data Provider for PostgreSQL" type="Npgsql.NpgsqlFactory, Npgsql"/>
    </DbProviderFactories>
  </system.data>
  <entityFramework>
    <defaultConnectionFactory type="System.Data.Entity.Infrastructure.SqlConnectionFactory, EntityFramework"/>
    <providers>
      <provider invariantName="System.Data.SqlClient" type="System.Data.Entity.SqlServer.SqlProviderServices, EntityFramework.SqlServer"/>
      <provider invariantName="Npgsql" type="Npgsql.NpgsqlServices, EntityFramework6.Npgsql"/>
    </providers>
  </entityFramework>
  <connectionStrings>
    <add name="MembershipRebootDb" connectionString="server=localhost;user id=postgres;password=postgres;database=maphive_mr;port=5432" providerName="Npgsql"/>
    <add name="IdentityServerDb" connectionString="server=localhost;user id=postgres;password=postgres;database=maphive_idsrv;port=5432" providerName="Npgsql"/>
  </connectionStrings>
  <appSettings>
    <add key="IdentityServerOrigin" value="https://idsrv.maphive.local"/>
    <add key="IdentityServerUri" value="https://idsrv.maphive.net"/>
    <add key="MembershipRebootDb" value="MembershipRebootDb"/>
    <add key="IdentityServerDb" value="IdentityServerDb"/>
    <add key="CertificateConfig" value="{StorageType: 'Embedded', FilePath: 'Bin\\Certs\\idsrv.maphive.net.pfx', NameSpace: 'MapHive.Identity.IdentityServer.Certs.idsrv.maphive.net.pfx', Subject: 'idsrv.maphive.local', Password: ''}"/>
    <add key="MembershipRebootConfiguration" value="{EmailIsUnique: true, EmailIsUsername: true, RequireAccountVerification: true, MultiTenant: false, PasswordHashingIterationCount: 1}"/>
    <!--See the SerialisableScope class for details-->
    <add key="IdentityServerScopes" value="[{ Name: 'maphive_apis', DisplayName: 'MapHive APIs', Description: 'Grants access to the MapHive APIs', Type: 1, /*resource*/ Claims: [{ Name: 'openid', AlwaysIncludeInIdToken: true }] }]"/>
    <!--see the SerializableClient class for details-->
    <!--
      Note: if scope access separation is required per scope, then separate clients are needed.
      This will result in not being able to redirect to other apis using given access token.
      In other words - use one client with one generic scope for all the apis. Access is likely to be limited by roles, prives and other reations anyway
    -->
    <add key="IdentityServerClients" value="[{ ClientName: 'MapHive APIs Client', ClientId: 'maphive-apis-client', Enabled: true, AccessTokenType: 1, /*reference token*/ Flow: 4, /*resource owner*/ ClientSecrets: [{ Value: 'maphive-apis-client-test-secret' }], AllowedScopes: ['maphive_apis', 'offline_access'], AccessTokenLifetime: 36000} ]"/>
  </appSettings>
  <runtime>
    <assemblyBinding xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="Npgsql" publicKeyToken="5d8b90d52f46fda7" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-3.2.7.0" newVersion="3.2.7.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Newtonsoft.Json" publicKeyToken="30ad4fe6b2a6aeed" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-10.0.0.0" newVersion="10.0.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="AutoMapper" publicKeyToken="be96cd2c38ef1005" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-6.1.0.0" newVersion="6.1.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.ValueTuple" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-4.0.3.0" newVersion="4.0.3.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="Serilog.Sinks.Console" publicKeyToken="24c2f752a8e58a10" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-3.1.1.0" newVersion="3.1.1.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Threading.Tasks.Extensions" publicKeyToken="cc7b13ffcd2ddd51" culture="neutral"/>
        <bindingRedirect oldVersion="0.0.0.0-4.2.0.0" newVersion="4.2.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.CSharpCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.5.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:6 /nowarn:1659;1699;1701"/>
      <compiler language="vb;vbs;visualbasic;vbscript" extension=".vb" type="Microsoft.CodeDom.Providers.DotNetCompilerPlatform.VBCodeProvider, Microsoft.CodeDom.Providers.DotNetCompilerPlatform, Version=1.0.5.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35" warningLevel="4" compilerOptions="/langversion:14 /nowarn:41008 /define:_MYTYPE=\&quot;Web\&quot; /optionInfer+"/>
    </compilers>
  </system.codedom>
</configuration>